#include <stdio.h>
#include <stdbool.h>
#include <string.h>

// Function to apply the CFG productions and check if the string is generated
bool check_derivation(const char *str, int start, int end) {
    if (start > end) {
        // If the start index exceeds the end index, the derivation is invalid
        return false;
    } else if (start == end) {
        // Single character string (terminal) should be '1'
        return str[start] == '1';
    } else if (str[start] == '1' && str[end] == '1') {
        // Derive S â†’ A101A
        int i = start + 1;

        // Find the first index where str[i] is not '0' or '1'
        while (i < end && (str[i] == '0' || str[i] == '1')) {
            i++;
        }

        // Check if the substring between start+1 and i-1 is generated by A
        bool A_derived = check_derivation(str, start + 1, i - 1);

        // Check if the substring between i and end-1 is generated by A
        bool A_derived2 = check_derivation(str, i, end - 1);

        return A_derived && (str[i] == '1') && A_derived2;
    }

    return false;
}

int main() {
    char input[100];
    printf("Enter a string: ");
    scanf("%s", input);

    int length = strlen(input);

    // Check if the given string is derived from the CFG start symbol 'S'
    if (check_derivation(input, 0, length - 1)) {
        printf("The string \"%s\" belongs to the language defined by the CFG.\n", input);
    } else {
        printf("The string \"%s\" does not belong to the language defined by the CFG.\n", input);
    }

    return 0;
}
